<?php

namespace ContainerH9EPHPZ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Z9k9VJcService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.z9k9VJc' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.z9k9VJc'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\AdminController::modifmdp' => ['privates', '.service_locator.XxKpjjM.App\\Controller\\AdminController::modifmdp()', 'getAdminControllermodifmdpService', true],
            'App\\Controller\\AdminController::modifprofile' => ['privates', '.service_locator.q60ydOj.App\\Controller\\AdminController::modifprofile()', 'getAdminControllermodifprofileService', true],
            'App\\Controller\\EvenementController::deinscription' => ['privates', '.service_locator.ImnksS7.App\\Controller\\EvenementController::deinscription()', 'getEvenementControllerdeinscriptionService', true],
            'App\\Controller\\EvenementController::delete' => ['privates', '.service_locator.sMofYe0.App\\Controller\\EvenementController::delete()', 'getEvenementControllerdeleteService', true],
            'App\\Controller\\EvenementController::edit' => ['privates', '.service_locator.sMofYe0.App\\Controller\\EvenementController::edit()', 'getEvenementControllereditService', true],
            'App\\Controller\\EvenementController::index' => ['privates', '.service_locator.l6hZplE.App\\Controller\\EvenementController::index()', 'getEvenementControllerindexService', true],
            'App\\Controller\\EvenementController::inscription' => ['privates', '.service_locator.ImnksS7.App\\Controller\\EvenementController::inscription()', 'getEvenementControllerinscriptionService', true],
            'App\\Controller\\EvenementController::new' => ['privates', '.service_locator.CBaP9av.App\\Controller\\EvenementController::new()', 'getEvenementControllernewService', true],
            'App\\Controller\\EvenementController::show' => ['privates', '.service_locator.fcxQIzM.App\\Controller\\EvenementController::show()', 'getEvenementControllershowService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.DQcw8Me.App\\Controller\\RegistrationController::register()', 'getRegistrationControllerregisterService', true],
            'App\\Controller\\ResetPasswordController::request' => ['privates', '.service_locator..V3RrT8.App\\Controller\\ResetPasswordController::request()', 'getResetPasswordControllerrequestService', true],
            'App\\Controller\\ResetPasswordController::reset' => ['privates', '.service_locator.OxGaOcy.App\\Controller\\ResetPasswordController::reset()', 'getResetPasswordControllerresetService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.mXDaS5b.App\\Controller\\SecurityController::login()', 'getSecurityControllerloginService', true],
            'App\\Controller\\SecurityController::logout' => ['privates', '.service_locator.l6hZplE.App\\Controller\\SecurityController::logout()', 'getSecurityControllerlogoutService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'App\\Controller\\AdminController:modifmdp' => ['privates', '.service_locator.XxKpjjM.App\\Controller\\AdminController::modifmdp()', 'getAdminControllermodifmdpService', true],
            'App\\Controller\\AdminController:modifprofile' => ['privates', '.service_locator.q60ydOj.App\\Controller\\AdminController::modifprofile()', 'getAdminControllermodifprofileService', true],
            'App\\Controller\\EvenementController:deinscription' => ['privates', '.service_locator.ImnksS7.App\\Controller\\EvenementController::deinscription()', 'getEvenementControllerdeinscriptionService', true],
            'App\\Controller\\EvenementController:delete' => ['privates', '.service_locator.sMofYe0.App\\Controller\\EvenementController::delete()', 'getEvenementControllerdeleteService', true],
            'App\\Controller\\EvenementController:edit' => ['privates', '.service_locator.sMofYe0.App\\Controller\\EvenementController::edit()', 'getEvenementControllereditService', true],
            'App\\Controller\\EvenementController:index' => ['privates', '.service_locator.l6hZplE.App\\Controller\\EvenementController::index()', 'getEvenementControllerindexService', true],
            'App\\Controller\\EvenementController:inscription' => ['privates', '.service_locator.ImnksS7.App\\Controller\\EvenementController::inscription()', 'getEvenementControllerinscriptionService', true],
            'App\\Controller\\EvenementController:new' => ['privates', '.service_locator.CBaP9av.App\\Controller\\EvenementController::new()', 'getEvenementControllernewService', true],
            'App\\Controller\\EvenementController:show' => ['privates', '.service_locator.fcxQIzM.App\\Controller\\EvenementController::show()', 'getEvenementControllershowService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.DQcw8Me.App\\Controller\\RegistrationController::register()', 'getRegistrationControllerregisterService', true],
            'App\\Controller\\ResetPasswordController:request' => ['privates', '.service_locator..V3RrT8.App\\Controller\\ResetPasswordController::request()', 'getResetPasswordControllerrequestService', true],
            'App\\Controller\\ResetPasswordController:reset' => ['privates', '.service_locator.OxGaOcy.App\\Controller\\ResetPasswordController::reset()', 'getResetPasswordControllerresetService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.mXDaS5b.App\\Controller\\SecurityController::login()', 'getSecurityControllerloginService', true],
            'App\\Controller\\SecurityController:logout' => ['privates', '.service_locator.l6hZplE.App\\Controller\\SecurityController::logout()', 'getSecurityControllerlogoutService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
        ], [
            'App\\Controller\\AdminController::modifmdp' => '?',
            'App\\Controller\\AdminController::modifprofile' => '?',
            'App\\Controller\\EvenementController::deinscription' => '?',
            'App\\Controller\\EvenementController::delete' => '?',
            'App\\Controller\\EvenementController::edit' => '?',
            'App\\Controller\\EvenementController::index' => '?',
            'App\\Controller\\EvenementController::inscription' => '?',
            'App\\Controller\\EvenementController::new' => '?',
            'App\\Controller\\EvenementController::show' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\ResetPasswordController::request' => '?',
            'App\\Controller\\ResetPasswordController::reset' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Controller\\SecurityController::logout' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AdminController:modifmdp' => '?',
            'App\\Controller\\AdminController:modifprofile' => '?',
            'App\\Controller\\EvenementController:deinscription' => '?',
            'App\\Controller\\EvenementController:delete' => '?',
            'App\\Controller\\EvenementController:edit' => '?',
            'App\\Controller\\EvenementController:index' => '?',
            'App\\Controller\\EvenementController:inscription' => '?',
            'App\\Controller\\EvenementController:new' => '?',
            'App\\Controller\\EvenementController:show' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\ResetPasswordController:request' => '?',
            'App\\Controller\\ResetPasswordController:reset' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'App\\Controller\\SecurityController:logout' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
